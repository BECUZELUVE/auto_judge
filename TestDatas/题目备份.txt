21.字典  元组特性/填空
（10分）
请编写一个程序，输入一个正整数a(0<a<100)，运行程序，在该正整数的任意位置插入一个数字5，使得插入后这个数最大，输出该数字的中文形式（即：零一二三四五六七八九）。
输入格式：
输入正整数a(0<a<100)
输出格式：
输出最大数的中文形式
示例1
输入样例：
10
输出样例：
五一零

示例2：
输入样例：
83
输出样例：
八五三

示例3：
输入样例：
8
输出样例：
八五

测试用例：
参考答案：
num_str = input()
num = int(num_str)
dic = {'0': '零', '1': '一', '2': '二', '3': '三', '4': '四',
       '5': '五', '6': '六', '7': '七', '8': '八', '9': '九'}
for i in range(len(num_str)):
    if int(num_str[i]) <= 5:
        num_str = num_str[:i] + '5' + num_str[i:]
        break
else:
    num_str = num_str + '5'
r = ''
for i in num_str:
    r += dic[i]
print(r)

22.字典
（10分）请编写一个程序，实现统计字符串中所有字母出现次数的功能。输入一个字符串（均为小写字母），输出一个列表，列表中一共有26个元素，按照英文字母表顺序排列，分别对应26个字母在该字符串中出现的次数，若该字符串中未出现某个字母，则其次数为0。

输入格式：
输入一个字符串（输入的均为小写字母）

输出格式：
输出一个列表（列表中一共有26个元素，分别对应26个字母在该字符串中出现的次数）

示例1：
输入样例：
helloworld
输出样例：
[0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]

示例2：
输入样例：
abc
输出样例：
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

测试用例：
参考答案：
思路一：字典
s = input()

#生成26个小写字母的字典
dic = {chr(i):0 for i in range(ord("a"), ord("z")+1)}
for j in s:
    dic[j]+=1
print(list(dic.values()))
思路二：列表
s = input()
result = [0]*26
#生成26个小写字母的列表
zimu = [chr(i) for i in range(ord("a"), ord("z")+1)]

for i in range(len(zimu)):
    for j in s:
        c = j.count(zimu[i])
        result[i] += c
print(result)
23.文本处理，re库   二维数据处理
（10分）请你使用re库编写一个程序，实现判断输入的时间字符串是否是HH:MM:SS格式的。输入一个时间字符串（输入时、分、秒的数值大小均是符合日常认知的），若满足HH:MM:SS格式（即时分秒之间用 英文冒号 : 连接，均用两位数字表示）则输出1，否则输出0。
输入格式：
输入一个时间字符串（输入时、分、秒的数值大小均是符合日常认知的）
输出格式：
输出一个1或0。若满足HH:MM:SS格式（时分秒之间用:连接，均用两位数字表示）则输出1，否则输出0

示例1
输入样例：
12:12:12
输出样例：
1

示例2
输入样例：
1:2:3
输出样例：
0

示例3
输入样例：
12.12.12
输出样例：
0

示例4
输入样例：
10:01:03
输出样例：
1

测试用例：
参考答案：
import re
pattern = r'(\d{2}:\d{2}:\d{2})'
date = input()
result = re.match(pattern,date)
if result:
    print(1)
else:
    print(0)

import re
s = input()
testv = re.match(
    r'(([0-1][0-9]||2[0-4]):([0-5][0-9]||60):([0-5][0-9]||60))', s)

if testv:
    print(1)
else:
    print(0)